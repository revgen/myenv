name: Update repo

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  tests-on-ubuntu:
    runs-on: ubuntu-latest
    name: "Update version"
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Get current version
        env:
          ENV_APP: myenv
        run: |
          new_version=
          git fetch --tags
          repo_version=$(git tag | sort --version-sort | tail -n 1)
          echo "repo_version=${repo_version}"
          current_version=$(grep "^VERSION" ./${ENV_APP} | cut -d"=" -f2)
          echo "current_version=${current_version}"
          if [ "${SKIP_VERSION_UPDATE}" == "true" ]; then
            echo "Variable SKIP_VERSION_UPDATE=true. Skip"
          else
            max_version=$(echo -e "${repo_version}\n${current_version}\n0.0.0" | sort --version-sort | tail -n 1)
            version_1_2=$(echo $max_version | awk -F"." '{print $1"."$2}')
            release=$(echo $max_version | awk -F"." '{print $3}')
            echo "processing version: ${version_1_2}.(${release})"
            release=$((release + 1))
            new_version="${version_1_2}.${release}"
          fi
          echo "new_version=${new_version}"
          echo "NEW_VERSION=${new_version}" >> "$GITHUB_ENV"
      - name: Use new version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
        run: |
          echo "Updating version variables in the repository"
          echo "NEW_VERSION=${NEW_VERSION}"
          if [ -n "${NEW_VERSION}" ]; then
            git config user.name "${GIT_USERNAME}"
            git config user.email "${GIT_EMAIL}"
            ./.github/workflows/update-version-in-repo.sh "${NEW_VERSION}"
            echo "Create a new commit with changes: version=${NEW_VERSION}"
            git add -A
            git commit -am "Update version: ${NEW_VERSION} [skip ci]"
            echo "Create ${NEW_VERSION} tag"
            git tag "${NEW_VERSION}"
            git push origin ${CI_COMMIT_BRANCH}
            git push origin ${NEW_VERSION}
          fi

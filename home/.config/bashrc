# If not running interactively, don't do anything
[ -z "${PS1}" ] && return

export OSTYPE="${OSTYPE}"
case "${OSTYPE}" in
  linux*)
    if grep "Microsoft\|WSL" /proc/sys/kernel/osrelease > /dev/null; then export OSNAME=wsl;
    else export OSNAME=linux; fi
    ;;
  darwin*|macos*) export OSNAME=macos ;;
  *) export OSNAME=unknown ;;
esac
export PATH="${HOME}/.local/bin:/opt/homebrew/bin:${PATH}"
export USERBIN="${USERBIN:-"${HOME}/.local/bin"}"


# ------[ Python specific ]----------------------------------------------------
# disabling Python bytecode (.pyc) files: generating the bytecode is extremely fast,
# and isnâ€™t something we need to worry about while developing our code
export PYTHONDONTWRITEBYTECODE=1
export PYTHONWARNINGS="ignore"

# ------[ Console History ]----------------------------------------------------
export HISTCONTROL=ignoreboth;      # Don't add similar command in the history
shopt -s histappend;                # Store command into the history immediately
PROMPT_COMMAND='history -a'
export HISTSIZE=9999;               # Store more commands in the history

# Prevent tar and other programs from giving special meaning to ._* archive members
export COPYFILE_DISABLE=1

#-- AWS settings ----------------------------------------------------
if command -v aws 2>&1>/dev/null; then
  if [ -z "${AWS_DEFAULT_PROFILE}" ]; then
    export AWS_DEFAULT_PROFILE=default
  fi
  if [ -z "${AWS_DEFAULT_REGION}" ]; then
    AWS_DEFAULT_REGION=$(aws configure get region 2>/dev/null)
    export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-"us-east-1"}
  fi
fi

#-- Useful aliases -----------------------------------------------------------
alias shellcheck='shellcheck -o all'
alias tig='tig --all'
alias docker-clean-unused='echo "Prune images..."; docker image prune -f; echo "Prune containers..."; docker container prune -f; echo "Done"'

#-- Useful functions ----------------------------------------------------------


#-- Git settions --------------------------------------------------------------
if [ -f "${HOME}/.git_completion" ]; then . "${HOME}/.git_completion"; fi

#-- OS Specific settings ------------------------------------------------------
if [ -r "${MYENVHOME}/${MYENVNAME}/${OSNAME}/bashrc" ]; then . "${MYENVHOME}/${MYENVNAME}/${OSNAME}/bashrc"; fi

# ------[ Customer welcome screen ]--------------------------------------------
if ! command -v "${MYENVNAME}" >/dev/null; then
  echo "ERROR: you have a problem with the ${MYENVNAME} environment."
  uname -srm
  echo "MYENVNAME = ${MYENVNAME}"
  echo "MYENVHOME = ${MYENVHOME}"
  ls -ahl "${HOME}/.local/src/${MYENVNAME}"
else
  if [ -z "${TERM_PROGRAM}" ]; then       # do not show additional information in not regular terminals
    if [ -x "${MYENVHOME}/${MYENVNAME}/home/.config/user-welcome" ]; then
      "${MYENVHOME}/${MYENVNAME}/home/.config/user-welcome"
    else
      "${MYENVNAME}" --version
    fi
  else
    "${MYENVNAME}" --version
  fi
fi

#-- Load a user specific configuration ----------------------------------------
if [ -f "${HOME}/.bashrc_${USER}" ]; then
  . "${HOME}/.bashrc_${USER}"
fi

# --[ Log ] -------------------------------------------------------------------
if [ -n "$DISPLAY" ]; then
    logger -t "${USER}"  "bash: init X-session"
elif [ -n "$SSH_TTY" ]; then
    logger -t "${USER}"  "bash: init ssh session [$SSH_CLIENT, $SSH_CONNECTION]"
fi

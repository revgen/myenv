#!/bin/sh
#=============================================================================
## Console tool to clean system: Trash, Downloads, Caches and etc.
#
#  author   :Evgen Rusakov
#  license  :MIT
#  date     :2017-07-24
#  version  :1.0
#
## Usage: {SCRIPT_NAME} option"
## Options:
##   trash          - clean system Trash
##   downloads      - clean old files in Downloads
##   logs           - clean logs
##   temp           - remove all data in system temp directory
##
#
#=============================================================================
show_help() {
  sed -n '/^##/,/^$/s/^## \{0,1\}//p' "$0" | sed 's/{SCRIPT_NAME}/'"${0##*/}"'/g'
  exit 255
}

clean_trash() {
    trash info
    if [ "$(trash size)" == "0B" ]; then
        echo "The trash is empty"
    else
        opt=
        read -n 1 -p "Are you sure you want to permanently erase the items in the Trash (y/N)? " opt
        [ -n "${opt}" ] && echo ""
        if [ "${opt}" == "Y" ] || [ "${opt}" == "y" ]; then
            trash clean
        fi
    fi
}

clean_history() {
    echo "Cleaning console and other cli history..."
    find "${HOME}" -maxdepth 1 -iname "*_history" -delete
    echo "Cleaning  console and other cli history - Done"
}

clean_temp() {
    TEMP=${TEMP:-"${TMPDIR}"}
    echo "Cleaning MC temp files..."
    rm -rvf "${TEMP}/mc-${USER}"
    echo "Cleaning MC temp files - Done"
}

clean_logs() {
    echo "Not Implemented"
}

clean_downloads() {
    keep_days=${1:-"30"}
    location=${2:-"$HOME/Downloads"}
    echo "Search files in ${location} for deletion..."
    old_files=$(find "${location}" -not -path '*/\.*' -maxdepth 1 -mindepth 1 -mtime +${keep_days})
    if [ -n "${old_files}" ]; then
        echo "${old_files}"
        count=$(echo ${old_files} | wc -l | sed 's/^[ ]*//g')
    else
        count=0
    fi
    if [ ${keep_days} -le 0 ]; then
        echo "Found ${count} files in ${location}."
    else
        echo "Found ${count} files in ${location} older then ${keep_days} days."
    fi
    if [ ${count} -eq 0 ]; then
        echo "Skip."
    else
        read -n 1 -p "Are you sure you want to delete ${count} files in ${location} (y/N)? " opt
        [ -n "${opt}" ] && echo ""
        if [ "${opt}" == "Y" ] || [ "${opt}" == "y" ]; then
            count=0
            echo "${old_files}" |\
            while read path; do
                #trash "${path}" && count=$(($count + 1)) && \
                echo "Move ${path} to the trash ${new_path}"
            done

            if [ ${count} -gt 0 ]; then
                if [ ${keep_days} -le 0 ]; then
                    notify "Downloads Cleaner" "Remove all ${count} items from the ${location}."
                else
                    notify "Downloads Cleaner" "Remove ${count} items from the ${location} older than ${keep_days} days."
                fi
            fi
        fi
    fi
}

cmd=${1:-"--help"}

case "${cmd}" in
    trash|--trash)          clean_trash ;;
    downloads|--downloads)  clean_downloads 30 "$HOME/Downloads" ;;
    history|--history)      clean_history ;;
    logs|--logs)            clean_logs ;;
    temp|--temp)            clean_temp ;;
    help|--help|h|-h)       show_help  ;;
    *) echo "ERROR: Unknown command ${1}."; show_help ;;
esac


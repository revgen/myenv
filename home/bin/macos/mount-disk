#!/bin/sh
show_help() {
    echo "Help"
    exit 255
}

command=mount
for arg in $@; do
    case "${arg}" in
        --umount|--unmount) command=umount;;
    esac
done

mount_dwg() {
    container_path=${1}
    mount_point=${2}
    key=${3}
    echo "Mount DWG container"
    echo "Container  : ${container_path}"
    echo "Mount point: ${mount_point}"
    mount | grep "${mount_point}" >/dev/null
    if [ $? -eq 0 ]; then
        echo "The containery already mounted into the ${mount_point}. Skip."
        exit 1
    else
        if [ -n "${key}" ]; then
            if [ "${key}" == "true" ]; then
                key=$(basename "${container_path}")
                key=${key%.*}
            fi
            echo "Key        : ${key}"
        fi
        echo "Mountint..."
        if [ -n "${key}" ]; then
            keychain get "${key}" | hdiutil attach -stdinpass -mountpoint "${mount_point}" "${container_path}"
            errcode=$?
            keychain lock
        else
            hdiutil attach -stdinpass -mountpoint "${mount_point}" "${container}"
            errcode=$?
        fi
        if [ ${errcode} -eq 0 ]; then
            echo "Done. Mounted to ${mount_point}."
            # Restart current terminal session (open new and close current)
            iterm2_tab new "cd '${DEST}' && pwd"; kill $(ps -p $$ -o ppid=)
        fi
    fi
}

cmd=${1:-"help"}
case "${cmd}" in
    home) "${0}" mount home ;;
    work) "${0}" mount work ;;
    mount|M)
        [ -z "${2}" ] && show_help
        case "${2}" in
            work|workspace)
                mount_dwg "${HOME}/.local/var/workspace.locker/$USER.workspace.sparsebundle" "${HOME}/Workspace" "true"
                ;;
            home|homespace)
                mount_dwg "${HOME}/.local/var/workspace.locker/$USER.homespace.sparsebundle" "${HOME}/Homespace" "true"
                ;;
            *)
                mount_dwg "${2}"
                ;;
        esac
        ;;
    umount|unmount|U)
        echo "umount"
        ;;
    help|H)
        show_help
        ;;
    *)
        echo "Unknown command '${cmd}'."
        show_help
        ;;
esac


#!/usr/bin/env bash
# #############################################################################
## Usage: {SCRIPT_NAME} [mount/umount/info/open/cd]
# #############################################################################
private_image=${HOME}/.local/var/${USER}-private-workspace
mount_point=${HOME}/Workspace/private
disk_name="$(basename "${private_image}")"
if [ ! -e "${private_image}" ]; then
  private_image="${private_image}.sparsebundle"
  disk_name="$(basename "${private_image%.*}")"
fi

show_help() {
  sed -n '/^##/,/^$/s/^## \{0,1\}//p' "$0" | sed 's/{SCRIPT_NAME}/'"${0##*/}"'/g'
  exit 1
}

umount_image() {
  echo "Unmounting '${mount_point}'..."
  if mount | grep -q "${mount_point}"; then
    hdiutil detach "${mount_point}" -force
    echo "Done"
  else
    echo "Disk is not mounted to the '${mount_point}'."
  fi
}

mount_image() {
  echo "Mounting '${disk_name}' to '${mount_point}'..."
  if mount | grep -q "${mount_point}"; then
    show_mount_point
    return 1
  fi
  mkdir -p "${mount_point}" || exit 1
  if [ ! -e "${private_image}" ]; then
    echo "Error: '${private_image}' not found."
    return 1
  fi
  hdiutil attach -mountpoint "${mount_point}" "${private_image}" || return 1
  show_mount_point
}

show_mount_point() {
  if mount | grep -q "${mount_point}"; then
    echo "Disk '${disk_name}' mounted to '${mount_point}':"
    ls -ahl "${mount_point}/"
  else
    echo "Disk '${private_image}' not mounted."
  fi
}

open_mount_point() {
  if mount | grep -q "${mount_point}"; then
    open "${mount_point}"
  else
    echo "Disk '${private_image}' not mounted."
  fi
}

case "${1:-mount}" in
    help|--help|-h|-H)	show_help;;
    mount|--mount|-M)	mount_image || exit 1 ;;
    umount|--umount|-U)	umount_image || exit 1 ;;
    open|--open)	open_mount_point ;;
    info|--info|-I|status|--status) show_mount_point || exit 1 ;;
    *) echo "Error: unknown command '${1}'."; exit 1 ;;
esac


#!/usr/bin/env bash
#=======================================================================
## User session in the terminal using GNU screen tool (https://www.gnu.org/software/screen/)
#
#  author   :Evgen Rusakov
#  license  :MIT
#  date     :2015-08-18
#  version  :1.0
#
## Usage: {SCRIPT_NAME} <NAME|--list|--list-all>
##    NAME       - create or attache to the session by name (default: main)
##    --list     - show all user's screens session
##    --list-raw - show raw screen -list output
##    --help     - show this help screen
##
#=======================================================================
PREFIX=screen-session-${USER}
SCREEN_CONFIG=${SCREEN_CONFIG:-"${HOME}/.screenrc"}

show_help() {
    sed -n '/^##/,/^$/s/^## \{0,1\}//p' "$0" | sed 's/{SCRIPT_NAME}/'"${0##*/}"'/g'
    exit 255
}

default_config() {
    echo 'startup_message off
vbell off
defscrollback 4096
defutf8 on
# Do not block command output if the terminal stops responding
# (like if the ssh connection times out for example).
nonblock on
shelltitle " screen"
shell -$SHELL
hardstatus string "%{= kb}[$USER@%H:%n] %{= kw}%-w%{= bw}%n*%t%{-}%+w %-= %{= kb}[%D %Y-%m-%d %c]"
hardstatus alwayslastline
# Disable C-A S, which is freeze the screen (use C-A Q to unfreeze)
bind s
# use "showkey" command to get a bindkey code
# Previous/Next Tab
bindkey "[1;5D" prev  # ctrl-left
bindkey "[1;5C" next  # ctrl-right
# Lock screen by Ctrl+L
bindkey "^L" lockscreen
# Force GNU screen to load bash profile
shell -$SHELL
select 0
'
}

list_screen_sessions() {
    res=$(screen -list | grep "${PREFIX}" | awk '{gsub("\t"," ",$0); print $0}' \
    | sed 's/^[ 0-9.]*//g' \
    | awk '{gsub("'${PREFIX}'-","",$0); print $0}')
    if [ -z "${res}" ]; then
        echo "There are now screen sessions."
    else
        echo "$res"
    fi
    exit 0
}

start_session() {
    name=${1:-"main"}
    session_name=${PREFIX}-${name}
    screen_list=$(screen -ls | grep ${session_name})
    if [ -n "${screen_list}" ]; then
        if [ -n "$(echo ${screen_list} | grep Attached)" ]; then
            if [ -z "$(echo ${TERMCAP} | grep screen)" ]; then
                echo "Enter into \"${name}\" screen session.";
                sleep 1;
                screen -x "${session_name}" ;
            else
                echo "Already in \"${name}\" session." ;
            fi
        else
            screen -r "${session_name}" ;
        fi
    else
        if [ ! -f "${SCREEN_CONFIG}" ]; then
            echo "Configuration file '${SCREEN_CONFIG}' doesn't exist. Creating..."
            mkdir -p "$(dirname "${SCREEN_CONFIG}")" 2>/dev/null
            default_config > "${SCREEN_CONFIG}"
        fi
        echo "Create screen session \"${name}\". Configuration file is \"${SCREEN_CONFIG}\""
        screen -S "${session_name}" -c "${SCREEN_CONFIG}"
    fi
}

case "${1}" in
    list|-l|--list) list_screen_sessions ;;
    --list-all) screen -list; exit 0 ;;
    help|--help) show_help ;;
    *) start_session $@ ;;
esac

#!/usr/bin/env bash
# ############################################################################
## Command line interface to work with api.ecowitt.net.
##
## Usage: {SCRIPT_NAME} [options]
## Options:
##   --from YYYY-MM-DD HH:MM:SS - you can use 'today', 'yesterday'
##   --to YYYY-MM-DD HH:MM:SS   - you can use 'today', 'yesterday'
##
## System environment or config values:
##   APP_KEY                    - need to connect to the API
##   API_KEY                    - need to connect to the API
##
## Config files:
##   /etc/ecowitt.conf
##   ~/.config/ecowitt.conf
##
## Dependencies: curl
##
#  Author: Evgen Rusakov (https://github.com/revgen)
#
# ############################################################################
set -e
show_help() {
    sed -n '/^##/,/^$/s/^## \{0,1\}//p' "$0" | sed 's/{SCRIPT_NAME}/'"${0##*/}"'/g'
    exit 1
}

NAME=ecowitt
VERSION=20221101

# We need to use gdate on the MacOS
date_app=$(which gdate || which date)
debug() { if [ "${ECOWITT_DEBUG}" == "true" ]; then >&2 echo $@; fi; }


APP_KEY=${APP_KEY}
API_KEY=${API_KEY}
MAC=${MAC}
FROM=${FROM}
TO=${TO}
CALL_BACK=${CALL_BACK}
CYCLE_TYPE=${CYCLE_TYPE:-"5min"}            # "5min","30min","4hour","1day"
UNIT_T=${UNIT_T:-"2"}                       # 1 - ℃, 2 - ℉
UNIT_P=${UNIT_P:-"4"}                       # 3 - hPa, 4 - inHg, 5 - mmHg
UNIT_W=${UNIT_W:-"9"}                       # 6 - m/s, 7 - km/h, 8 - knots, 9 - mph, 10 - BFT, 11 - fpm
UNIT_R=${UNIT_R:-"13"}                      # 12 - mm, 13 - in
UNIT_S=${UNIT_S:-"16"}                      # 14 - lux, 15 - fc, 16 - W/m²





show_history() {
    tmp_file=$(mktemp)
    url="https://api.ecowitt.net/api/v3/device/history?application_key=${APP_KEY}"
    url="${url}&api_key=${API_KEY}&mac=${MAC}&start_date=${FROM}&end_date=${TO}"
    url="${url}&cycle_type=${CYCLE_TYPE}&call_back=${CYCLE_TYPE}"
    url="${url}&temp_unitid=${UNIT_T}&pressure_unitid=${UNIT_P}&rainfall_unitid=${UNIT_R}"
    url="${url}&wind_speed_unitid=${UNIT_W}&solar_irradiance_unitid=${UNIT_S}"

    curl -s --url "${url}" \
        -H "content-type: application/json" \
        | tee "${tmp_file}" || exit 1

    if ! grep -q "^[ ]*\"code\":[ ]*0\,[ ]*$" "${tmp_file}"; then
        debug "Error: http-code=${http_code}"
        exit 1
    fi
    rm -f "${tmp_file}"
}

cmd="${1:-""}"
case "${cmd}" in
    config) load_config && show_config;;
    help|--help|-h) show_help;;
    "") ;;
    *) echo "Error: unknown '${1}' command"; exit 1;;
esac

show_history

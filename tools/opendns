#!/bin/sh
# shellcheck shell=sh disable=SC3014 source=/dev/null
# ############################################################################
## Opendns is a shell script used to update OpenDNS records
## Usage: {SCRIPT_NAME} <update|check>
##
## System environment:
##   DYNDNS_USER - account user name
##   DYNDNS_PASS - account password
##   DYNDNS_HOST - dyndns servername (default: updates.opendns.com)
##   DYNDNS_NAME - dyndns network/profile name (default: main)
##   EXTERNAL_IP - external IP adddress for your OpenDNS network
##
#  Evgen Rusakov (https://github.com/revgen) 2023 MIT License
# ############################################################################
HTTP_TIMEOUT=10
debug() { [ "${DEBUG:-""}" == "true" ] && >&2 echo "$*"; }
load_config() {
    if [ ! -e "${1}" ]; then return 0; fi
    debug "Load configuration file ${1}"
    . "${1}"
}
external_ip() {
    if command -v curl >/dev/null; then curl -sL "http://checkip.amazonaws.com" 2>/dev/null;
    else wget -qO - "http://checkip.amazonaws.com" 2>/dev/null; fi
}

dyndns_client() {
    TMPFILE="$(mktemp)"
    EXTERNAL_IP="${EXTERNAL_IP:-"""$(external_ip || true)"}"
    if [ -n "${DYNDNS_URL}" ]; then
        url="${DYNDNS_URL}"
    else
        url="https://${DYNDNS_HOST}/nic/update?hostname=${DYNDNS_NAME}&myip=${EXTERNAL_IP}"
    fi

    debug "Request ${url}..."
    debug "Command: curl --max-time ${HTTP_TIMEOUT} --connect-timeout ${HTTP_TIMEOUT} -Ls -u '${DYNDNS_USER}:${DYNDNS_PASS}' '${url}'"
    debug "Tmp file: ${TMPFILE}"
    # touch "${TMPFILE}"
    curl --max-time "${HTTP_TIMEOUT}" --connect-timeout "${HTTP_TIMEOUT}" -Ls -u ''"${DYNDNS_USER}:${DYNDNS_PASS}"'' "${url}" > "${TMPFILE}"
    errcode=$?
    resp="$(cat "${TMPFILE}")"
    errmsg="$(cut -d" " -f1 "${TMPFILE}")"
    debug "Response: ${resp}"
    case ${errmsg} in
        "good") msg="SUCCESS: (good) DNS hostname successfully updated (${DYNDNS_NAME}=${EXTERNAL_IP})." ;;
        "nochg") msg="SUCCESS: (nochg) no update performed (${DYNDNS_NAME}=${EXTERNAL_IP})." ;;
        "nohost") errcode=1; msg="ERROR: (nohost) Hostname supplied does not exist under specified account. Revise config file." ;;
        "badauth") errcode=1; msg="ERROR: (badauth) Invalid username password combination." ;;
        "badagent") errcode=1; msg="ERROR: (badagent) Client disabled - Server is no longer allowing requests from this update script." ;;
        '!donator') errcode=1; msg="ERROR: (donator) An update request was sent including a feature that is not available." ;;
        "abuse") errcode=1; msg="ERROR: (abuse) username is blocked due to abuse." ;;
        "911") errcode=1; msg="ERROR: (911) A fatal error on our side such as a database outage. Retry the update in no sooner than 30 minutes." ;;
        "") errcode=1; msg="ERROR: (empty) No response received from the server. This may be due to rate limiting, timeout or a server-side problem." ;;
        *) errcode=1; msg="ERROR: (error: ${resp}) Could not understand the response from No-IP. The DNS update server may be down." ;;
    esac
    logger -t "[${SCRIPT_NAME}]" "${msg}"
    echo "[${SCRIPT_NAME}] ${msg}"
}

check_opendns() {
    TMPFILE="$(mktemp)"
    err_msg=""
    if curl -sI "https://welcome.opendns.com/" | grep "HTTP" | grep -q 200; then
        debug "[OK ] Welcome OpenDNS - Success"
    else
        debug "[ERR] Welcome OpenDNS - Failed"
        err_msg="${err_msg}, Welcome OpenDNS - Failed"
    fi
    if curl -sL "http://www.internetbadguys.com/" | grep -q "InternetBadGuys.com is only a demonstration site"; then
        debug "[ERR] InternetBadGuys - allowed"
        err_msg="${err_msg}, InternetBadGuys - allowed"
    else
        debug "[OK ] InternetBadGuys - not allowed"
    fi
    if curl -sI "https://www.sex.com" | grep -q HTTP; then
        debug "[ERR] Bad site - allowed"
        err_msg="${err_msg}, Bad site - allowed"
    else
        debug "[OK ] Bad site - not allowed"
    fi
    err_msg="$(echo "${err_msg}" | sed 's/^[ ,]*//g')"
    if [ -n "${err_msg}" ]; then
        echo "[Error] OpenDNS settings is BAD: ${err_msg}"
        logger -t "[${SCRIPT_NAME}]" "[Error] OpenDNS settings is BAD: ${err_msg}"
        return 1
    fi
    echo "OpenDNS settings is good"
    logger -t "[${SCRIPT_NAME}]" "OpenDNS settings is good"
}
SCRIPT_NAME="$(basename "${0}")"
load_config "/etc/${SCRIPT_NAME}.conf"
load_config "${HOME}/.${SCRIPT_NAME}.conf"
load_config "${HOME}/.config/.${SCRIPT_NAME}.conf"
load_config "$(dirname "${0}")/${SCRIPT_NAME}.conf"


EXTERNAL_IP="${EXTERNAL_IP:-""}"
DYNDNS_USER="${DYNDNS_USER:-""}"
DYNDNS_PASS="${DYNDNS_PASS:-""}"
DYNDNS_URL="${DYNDNS_URL:-""}"
DYNDNS_HOST="${DYNDNS_HOST:-"updates.opendns.com"}"
DYNDNS_NAME="${DYNDNS_NAME:-"main"}"

case "${1:-"update"}" in
    update) dyndns_client;;
    check) check_opendns;;
    help|--help)
        sed -n '/^##/,/^$/s/^## \{0,1\}//p' "$0" | sed 's/{SCRIPT_NAME}/'"${SCRIPT_NAME}"'/g'
        exit 1;;
    *) echo "Error: unknown command '${1}'"; exit 1;;
esac

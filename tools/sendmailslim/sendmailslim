#!/bin/sh
#=============================================================================
## SendMailSlim - script to send emails via SMTP server using an openssl console
##
## use: {SCRIPT_NAME} [subject] [body]
##
## Specify other parameters using system environment or configuration file.
##   export SMTP_SERVER=smtp.gmail.com:465 or other smtp-ssl server
##   export SMTP_FROM_ADDR=your-account@gmail.com
##   export SMTP_FROM_NAME=YourAccountName
##   export SMTP_PASSWORD=your-gmail-password
##   export SMTP_TO_ADDR=superadmin@test.com
##   export SMTP_TO_NAME=Admin
##
##   SMTP_CONFIG=<configuration file path>
##
## Default config file paths:
##   /etc/{SCRIPT_NAME}.conf
##   /opt/etc/{SCRIPT_NAME}.conf
##
## Example:
##   Send an email using configuration file with "Test email" in a subject and "Hello!" in a body.
##   $ SMTP_CONFIG=/etc/smtp-sample.conf {SCRIPT_NAME} "Test email" "Hello!"
##
##   Send an email using system environment with "Test email 2" in a subject and "Hello Leo!" in a body.
##   $ export SMTP_FROM_ADDR=jsm1th@gmail.com
##   $ export SMTP_PASSWORD=Pa$$word
##   $ export SMTP_TO_ADDR=leo@test.com
##   $ {SCRIPT_NAME} "Test email 2" "Hello Leo!"
##
# Author : Evgen Rusakov, 2015
# Version: 1.0.0
# Url    : https://gist.github.com/revgen
# License: MIT
#
#=============================================================================

# Delay between line-by-line commands in the openssl console
T=1
# Current script name
N=$(basename "$0")

# Activate default settings from configuration file if exists
[ -f "/etc/${N}.conf" ] && source "/etc/${N}.conf"
[ -f "/opt/etc/{N}.conf" ] && source "/opt/etc/${N}.conf"
[ -n "${SMTP_CONFIG}" ] && source "$SMTP_CONFIG"

FROM_ADDR=${FROM_ADDR:-"${SMTP_FROM_ADDR}"}
FROM_NAME=${FROM_NAME:-"${SMTP_FROM_NAME}"}
TO_ADDR=${TO_ADDR:-"${SMTP_TO_ADDR}"}
TO_NAME=${TO_NAME:-"${SMTP_TO_NAME}"}
[ -z "$SMTP_SERVER" ] && SMTP_SERVER=smtp.gmail.com:465
_V=-quiet
[ "$SMTP_VERBOSE" == "2" ] && _V=-debug
[ "$SMTP_VERBOSE" == "1" ] && _V=

[ -z "$LOG" ] && LOG=/tmp/$N-$(date +%s).log
log() { logger -t "user.smtp" $1; echo $1; }

# Build a message (you can see it, execute script with "_msg_" parameter)
case "$1" in
_msg_) shift
  [ -z "$SUBJ" ] && SUBJ=$1
  [ -z "$SUBJ" ] && SUBJ=Notification
  [ -z "$BODY" ] && BODY=$2
  [ -z "$BODY" ] && BODY=$(cat /dev/stdin)
  sleep $T && echo "EHLO localhost"
  sleep $T && echo "AUTH LOGIN"
  sleep $T && openssl base64 <<< $FROM_ADDR
  sleep $T && openssl base64 <<< $SMTP_PASSWORD
  sleep $T && echo "MAIL FROM: <${FROM_ADDR}>"
  sleep $T && echo "rcpt to: <${TO_ADDR}>"
  sleep $T && echo "DATA"
  sleep $T && echo "from: ${FROM_NAME}<${FROM_ADDR}>"
  sleep $T && echo "to: ${TO_NAME}<${TO_ADDR}>"
  sleep $T && echo "subject: ${SUBJ}"
  sleep $T && echo "${BODY}"
  sleep $T && echo "."
  sleep $T && echo "quit"
  exit 0 ;;
--help|-h)
  sed -n '/^##/,/^$/s/^## \{0,1\}//p' "$0" | sed 's/{SCRIPT_NAME}/'"$N"'/g'
  exit 255 ;;
esac

[[ -z "$FROM_ADDR" || -z "$TO_ADDR" ]] && echo "Incorrect configuration: SMTP_FROM_ADDR and SMTP_TO_ADDR are required" && exit 1

# Get builded message and send it using openssl console
log "Send email from ${FROM_ADDR} to ${TO_ADDR}"
sh "$0" _msg_ "$1" "$2" | openssl s_client -connect "$SMTP_SERVER" -crlf $_V | tee -a "$LOG"
grep "250 2.0.0 OK" $LOG 2>&1 >/dev/null
if [ $? -eq 0 ]; then log "Send email success."; rm "$LOG"; exit 0
else log "ERROR: Send email failed. log=$LOG.gz"; gzip -9 "$LOG"; fi
exit 1
